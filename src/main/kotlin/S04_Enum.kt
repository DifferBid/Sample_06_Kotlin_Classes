
package org.example

    // Определение перечисления Operation
    enum class Operation {
        // Реализация абстрактного метода apply для операции сложения
        ADD {
            override fun apply(x: Int, y: Int): Int = x + y
        },
        // Реализация абстрактного метода apply для операции вычитания
        SUBTRACT {
            override fun apply(x: Int, y: Int): Int = x - y
        };

        // Абстрактный метод, который должен быть реализован каждым элементом перечисления
        abstract fun apply(x: Int, y: Int): Int
    }

    // Перечисление Operation:
    // Определяет набор арифметических операций. В данном случае это ADD (сложение) и SUBTRACT (вычитание).
    // Абстрактный метод apply: Объявляется как абстрактный метод в теле перечисления. Каждый элемент перечисления обязан реализовать этот метод.
    // Реализация метода apply:
    // Для элемента ADD метод apply реализован как функция, которая складывает два числа.
    // Для элемента SUBTRACT метод apply реализует вычитание.

    fun main() {

        // В main функции создается переменная result, которая хранит результат вызова метода apply для элемента ADD с аргументами 3 и 4.
        // В результате выполнения программы будет выведено число 7, так как операция сложения добавляет 3 и 4.
        // Применение операции ADD к числам 3 и 4
        val resultADD = Operation.ADD.apply(3, 4)
        println(resultADD) // Выводит 7

        val resultSUBTRACT = Operation.SUBTRACT.apply(6,3)
        println(resultSUBTRACT) // Выводит 3
    }

